{"version":3,"sources":["component/register/register.js","component/login/login.js","component/status/status.js","App.js","serviceWorker.js","index.js"],"names":["Register","props","state","email","status","text","name","pass","cpass","main","passCheck","passPolicy","register","bind","validSubmit","validate","hasError","checkPolicy","policyNotSatisfied","showPolicy","hidePolicy","axios","post","document","getElementById","value","password","then","res","setState","data","message","setTimeout","this","checkBlank","makeEmpty","e","field","target","update","update_1","id","test","length","fields","getElementsByClassName","val","search","className","htmlFor","type","onChange","onFocus","onBlur","map","item","index","key","success","error","onClick","Component","Login","login","show","showUser","Status","users","logout","get","getStatus","user","user_name","setStatus","App","addUser","userEmail","invoke","ref","instance","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.a07e43a9.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass Register extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: {status: false, text: ''},\r\n            name: {status: false, text: ''},\r\n            pass: {status: false, text: ''},\r\n            cpass: {status: false, text: ''},\r\n            main: {status: false, text: ''},\r\n            passCheck: false,\r\n            passPolicy: {\r\n                'lower': {status: false},\r\n                'upper': {status: false},\r\n                'numeric': {status: false},\r\n                'special': {status: false},\r\n                'eight': {status: false}\r\n            }\r\n        };\r\n\r\n        this.passCheck = [\r\n            {'id': 'lower', 'error': 'err', 'success': 'err success', 'text': 'At least one lower-case character'},\r\n            {'id': 'upper', 'error': 'err', 'success': 'err success', 'text': 'At least one upper-case character'},\r\n            {'id': 'numeric', 'error': 'err', 'success': 'err success', 'text': 'At least one numeric character'},\r\n            {'id': 'special', 'error': 'err', 'success': 'err success', 'text': 'At least one special character (!@#_)'},\r\n            {'id': 'eight', 'error': 'err', 'success': 'err success', 'text': 'At least eight characters'}\r\n        ];\r\n\r\n        this.register = this.register.bind(this);\r\n        this.validSubmit = this.validSubmit.bind(this);\r\n        this.validate = this.validate.bind(this);\r\n        this.hasError = this.hasError.bind(this);\r\n        this.checkPolicy = this.checkPolicy.bind(this);\r\n        this.policyNotSatisfied = this.policyNotSatisfied.bind(this);\r\n        this.showPolicy = this.showPolicy.bind(this);\r\n        this.hidePolicy = this.hidePolicy.bind(this);\r\n    }\r\n\r\n    async register() {\r\n\r\n        // const url = 'http://localhost:3002/register';\r\n        const url = 'http://deepmuni-1.eastus.azurecontainer.io:3002/register';\r\n\r\n        await axios.post(url, {\r\n            email: document.getElementById('registerEmail').value,\r\n            name: document.getElementById('registerName').value,\r\n            password: document.getElementById('registerPass').value\r\n        })\r\n            .then(res => {\r\n                this.setState({\r\n                    main : {status: true, text: res.data.message}\r\n                });\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        main : {status: false, text: ''}\r\n                    });\r\n                },2500);\r\n            });\r\n    }\r\n\r\n    validSubmit(){\r\n        if(this.checkBlank()){\r\n            this.setState({\r\n                main : {status: true, text: 'Please fill out empty fields!!'}\r\n            });\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    main : {status: false, text: ''}\r\n                });\r\n            },2500);\r\n        }else if(this.hasError()){\r\n            this.setState({\r\n                main : {status: true, text: 'Please correct the errors!!'}\r\n            });\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    main : {status: false, text: ''}\r\n                });\r\n            },2500);\r\n        }else if(this.policyNotSatisfied()){\r\n            this.setState({\r\n                main : {status: true, text: 'Please follow password policy'},\r\n            });\r\n            this.showPolicy();\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    main : {status: false, text: ''}\r\n                });\r\n            },2500);\r\n        }else{\r\n            this.register();\r\n            this.makeEmpty();\r\n            this.setState({\r\n                passPolicy: {\r\n                    'lower': {status: false},\r\n                    'upper': {status: false},\r\n                    'numeric': {status: false},\r\n                    'special': {status: false},\r\n                    'eight': {status: false}\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    validate(e) {\r\n\r\n        const field = e.target;\r\n        let update = {};\r\n        let update_1 = {};\r\n\r\n        switch (e.target.id) {\r\n            case 'registerEmail':\r\n                if (field.value === \"\") {\r\n                    update = {status: true, text: 'Email is required'}\r\n                } else if (!(/^[a-zA-Z0-9.]+@(?:[a-zA-Z0-9]+\\.)+[A-Za-z]+$/.test(field.value))) {\r\n                    update = {status: true, text: 'Please enter correct email'}\r\n                } else {\r\n                    update = {status: false, text: ''}\r\n                }\r\n                this.setState({\r\n                    email: update\r\n                });\r\n                break;\r\n            case 'registerName':\r\n                if (field.value === \"\") {\r\n                    update = {status: true, text: 'Name is required'}\r\n                } else if (field.value.length < 4 || field.value.length > 21) {\r\n                    update = {status: true, text: 'Length between 4 & 21'}\r\n                } else {\r\n                    update = {status: false, text: ''}\r\n                }\r\n                this.setState({\r\n                    name: update\r\n                });\r\n                break;\r\n            case 'registerPass':\r\n\r\n                this.checkPolicy(field.value);\r\n\r\n                if(field.value === \"\"){\r\n                    update = {status : true, text :'Password is required'}\r\n                }else{\r\n                    update = {status : false, text : ''}\r\n                }\r\n                if(field.value !== document.getElementById('registerCPass').value){\r\n                    update_1 = {status : true, text :'Password does not match'}\r\n                }\r\n                this.setState({\r\n                    pass: update,\r\n                    cpass: update_1,\r\n                });\r\n                break;\r\n            case 'registerCPass':\r\n                if(field.value === \"\"){\r\n                    update = {status : true, text :'Confirmed Password is required'}\r\n                }else if(field.value !== document.getElementById('registerPass').value){\r\n                    update = {status : true, text :'Password does not match'}\r\n                }else{\r\n                    update = {status : false, text :''}\r\n                }\r\n                this.setState({\r\n                    cpass: update\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    checkBlank(){\r\n        const fields = document.getElementsByClassName('inp_register');\r\n        for(let field of fields){\r\n            if(field.value === \"\"){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    hasError(){\r\n        return (this.state.email.status || this.state.name.status || this.state.pass.status ||\r\n            this.state.cpass.status);\r\n    }\r\n\r\n    checkPolicy(val){\r\n        this.setState({\r\n            passPolicy: {\r\n                'lower': {status: val.search(/[a-z]/) >= 0},\r\n                'upper': {status: val.search(/[A-Z]/) >= 0},\r\n                'numeric': {status: val.search(/[0-9]/) >= 0},\r\n                'special': {status: val.search(/[!@#_]/) >= 0},\r\n                'eight': {status: val.length > 7}\r\n            }\r\n        });\r\n    }\r\n\r\n    policyNotSatisfied(){\r\n        return (!(this.state.passPolicy['lower'].status && this.state.passPolicy['upper'].status &&\r\n                this.state.passPolicy['numeric'].status && this.state.passPolicy['special'].status &&\r\n                this.state.passPolicy['eight'].status)\r\n        );\r\n    }\r\n\r\n    showPolicy(){\r\n        this.setState({\r\n            passCheck: true\r\n        });\r\n    }\r\n\r\n    hidePolicy(){\r\n        this.setState({\r\n            passCheck: false\r\n        });\r\n    }\r\n\r\n    makeEmpty(){\r\n        const fields = document.getElementsByClassName('inp inp_register');\r\n        for(const field of fields){\r\n            field.value = \"\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Box\">\r\n                <form>\r\n                    <div className=\"input-section\">\r\n                        <label htmlFor=\"registerEmail\">Email</label>\r\n                        <input type=\"email\" id=\"registerEmail\" className=\"inp inp_register\"\r\n                               onChange={this.validate}/>\r\n                        {this.state.email.status ? <div className=\"error\">{this.state.email.text}</div> : null}\r\n                    </div>\r\n                    <div className=\"input-section\">\r\n                        <label htmlFor=\"registerName\">Name</label>\r\n                        <input type=\"email\" id=\"registerName\" className=\"inp inp_register\"\r\n                               onChange={this.validate}/>\r\n                        {this.state.name.status ? <div className=\"error\">{this.state.name.text}</div> : null}\r\n                    </div>\r\n                    <div className=\"input-section\">\r\n                        <label htmlFor=\"registerPass\">Password</label>\r\n                        <input type=\"password\" id=\"registerPass\" className=\"inp inp_register\"\r\n                               onChange={this.validate} onFocus={this.showPolicy} onBlur={this.hidePolicy}/>\r\n                        {this.state.pass.status ? <div className=\"error\">{this.state.pass.text}</div> : null}\r\n                        <div className={this.state.passCheck ? \"pass-check\" : \"pass-check hide\"}>\r\n                            {\r\n                                this.passCheck.map((item, index) => {\r\n                                    return(\r\n                                        <p key={index} id={item.id}\r\n                                           className={this.state.passPolicy[item.id].status\r\n                                               ? item.success : item.error}>{item.text}</p>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input-section\">\r\n                        <label htmlFor=\"registerCPass\">Confirm Password</label>\r\n                        <input type=\"password\" id=\"registerCPass\" className=\"inp inp_register\"\r\n                               onChange={this.validate}/>\r\n                        {this.state.cpass.status ? <div className=\"error\">{this.state.cpass.text}</div> : null}\r\n                    </div>\r\n                </form>\r\n                <div className=\"input-section\">\r\n                    {this.state.main.status ? <div className=\"submitError\">{this.state.main.text}</div> : null}\r\n                    <button className=\"submit\" onClick={this.validSubmit}>Register</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;\r\n","import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: {status: false, text: ''},\r\n            pass: {status: false, text: ''},\r\n            main: {status: false, text: '', success: false}\r\n        }\r\n\r\n        this.login = this.login.bind(this);\r\n        this.validSubmit = this.validSubmit.bind(this);\r\n        this.validate = this.validate.bind(this);\r\n        this.hasError = this.hasError.bind(this);\r\n    }\r\n\r\n    async login() {\r\n\r\n        // const url = 'http://localhost:3001/login';\r\n        const url = 'http://deepmuni.eastus.azurecontainer.io:3001/login';\r\n\r\n        await axios.post(url, {\r\n            email: document.getElementById('loginEmail').value,\r\n            password: document.getElementById('loginPass').value\r\n        })\r\n            .then(res => {\r\n                this.setState({\r\n                    main : {status: true, text: res.data.message, success: res.data.status}\r\n                });\r\n                setTimeout(() => {\r\n\r\n                    const show = this.state.main.success;\r\n                    this.setState({\r\n                        main : {status: false, text: '', success: false}\r\n                    });\r\n\r\n                    if(show){\r\n                        this.props.update();\r\n                        this.props.showUser(document.getElementById('loginEmail').value);\r\n                    }\r\n\r\n                    this.makeEmpty();\r\n                },1000);\r\n            });\r\n    }\r\n\r\n    validate(e) {\r\n\r\n        const field = e.target;\r\n        let update = {};\r\n\r\n        switch (e.target.id) {\r\n            case 'loginEmail':\r\n                if (field.value === \"\") {\r\n                    update = {status: true, text: 'Email is required'}\r\n                } else if (!(/^[a-zA-Z0-9.]+@(?:[a-zA-Z0-9]+\\.)+[A-Za-z]+$/.test(field.value))) {\r\n                    update = {status: true, text: 'Please enter correct email'}\r\n                } else {\r\n                    update = {status: false, text: ''}\r\n                }\r\n                this.setState({\r\n                    email: update\r\n                });\r\n                break;\r\n            case 'loginPass':\r\n                if(field.value === \"\"){\r\n                    update = {status : true, text :'Password is required'}\r\n                }else{\r\n                    update = {status : false, text : ''}\r\n                }\r\n                this.setState({\r\n                    pass: update,\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    validSubmit(){\r\n        if(this.checkBlank()){\r\n            this.setState({\r\n                main : {status: true, text: 'Please fill out empty fields!!'}\r\n            });\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    main : {status: false, text: ''}\r\n                });\r\n            },2500);\r\n        }else if(this.hasError()){\r\n            this.setState({\r\n                main : {status: true, text: 'Please correct the errors!!'}\r\n            });\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    main : {status: false, text: ''}\r\n                });\r\n            },2500);\r\n        }else{\r\n            this.login();\r\n        }\r\n    }\r\n\r\n    checkBlank(){\r\n        const fields = document.getElementsByClassName('inp_login');\r\n        for(let field of fields){\r\n            if(field.value === \"\"){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    hasError(){\r\n        return (this.state.email.status || this.state.pass.status);\r\n    }\r\n\r\n    makeEmpty(){\r\n        const fields = document.getElementsByClassName('inp inp_login');\r\n        for(const field of fields){\r\n            field.value = \"\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Box\">\r\n                <form>\r\n                    <div className=\"input-section\">\r\n                        <label htmlFor=\"loginEmail\">Email</label>\r\n                        <input type=\"email\" id=\"loginEmail\" className=\"inp inp_login\"\r\n                               onChange={this.validate}/>\r\n                        {this.state.email.status ? <div className=\"error\">{this.state.email.text}</div> : null}\r\n                    </div>\r\n                    <div className=\"input-section\">\r\n                        <label htmlFor=\"loginPass\">Password</label>\r\n                        <input type=\"password\" id=\"loginPass\" className=\"inp inp_login\"\r\n                               onChange={this.validate} />\r\n                        {this.state.pass.status ? <div className=\"error\">{this.state.pass.text}</div> : null}\r\n                    </div>\r\n                </form>\r\n                <div className=\"input-section\">\r\n                    {this.state.main.status ? <div className=\"submitError\">{this.state.main.text}</div> : null}\r\n                    <button className=\"submit\" onClick={this.validSubmit}>Login</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass Status extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            users: [],\r\n        }\r\n\r\n        this.logout = this.logout.bind(this);\r\n\r\n    }\r\n\r\n    async getStatus() {\r\n        // const url = 'http://localhost:3003/status';\r\n        const url = \"http://deepmuni-2.eastus.azurecontainer.io:3003/status\";\r\n\r\n        await axios.get(url)\r\n            .then(res => {\r\n                this.setState({\r\n                    users: res.data\r\n                })\r\n            });\r\n    }\r\n\r\n    async logout(){\r\n\r\n        // const url = 'http://localhost:3003/logout';\r\n        const url = \"http://deepmuni-2.eastus.azurecontainer.io:3003/logout\";\r\n\r\n        await axios.get(url)\r\n            .then(res => {\r\n                this.getStatus();\r\n            });\r\n    }\r\n\r\n    setStatus(){\r\n        if(this.state.users.length > 0){\r\n            return(\r\n                <div className=\"status\">\r\n                    <p className=\"head\">Welcome!!</p>\r\n                    <p className=\"user\">{this.props.user}</p>\r\n                    <p className=\"head\">Friends Online</p>\r\n                    <ul>\r\n                        {\r\n                            this.state.users.map((user,index) => {\r\n                                if(user.email !== this.props.user){\r\n                                    return <li className=\"user\" key={index}>{user.user_name}</li>\r\n                                }else{\r\n                                    return null;\r\n                                }\r\n                            })\r\n                        }\r\n                    </ul>\r\n                    <button className=\"submit\" onClick={this.logout}>Logout All</button>\r\n                </div>\r\n            )\r\n        }else{\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Box\">\r\n                {this.setStatus()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Status;\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport Register from \"./component/register/register\";\nimport Login from \"./component/login/login\";\nimport Status from \"./component/status/status\";\n\nclass App extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: ''\n        }\n\n        this.addUser = this.addUser.bind(this);\n    }\n\n    addUser(userEmail){\n        this.setState({\n            user: userEmail\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Register/>\n                <Login update={() => this.invoke.getStatus() } showUser={this.addUser}/>\n                <Status ref={instance => { this.invoke = instance; }} user={this.state.user}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}